
#include <esp_now.h>
#include <WiFi.h>
#include <Arduino.h>
#include <U8x8lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif

char temp[3];

U8X8_SH1106_128X64_NONAME_HW_I2C u8x8(/* reset=*/ U8X8_PIN_NONE);
const int ledPin = 2;
// Structure example to receive data
// Must match the sender structure
typedef struct struct_message {
    char a[32];
    int b;
    char c;
    //bool d;
} struct_message;

// Create a struct_message called myData
struct_message myData;

// callback function that will be executed when data is received
void OnDataRecv(const uint8_t * mac, const uint8_t *incomingData, int len) {
  memcpy(&myData, incomingData, sizeof(myData));
  u8x8.setFont(u8x8_font_chroma48medium8_r);
  Serial.print("Bytes received: ");
  Serial.println(len);
  Serial.print("Char: ");
  Serial.println(myData.a);
  u8x8.drawString(0,0,"map :");
  u8x8.drawString(0,1,myData.a);

  Serial.print("Int: ");
  Serial.println(myData.b);
  if(myData.b==1){
  u8x8.drawString(0,3,"fire dedected");
   digitalWrite(ledPin, HIGH);
  }
  
  if(myData.b == 0){ 
    u8x8.drawString(0,3,"no fire");
     digitalWrite(ledPin, LOW); 
  }



  Serial.print("Float: ");
  Serial.println(myData.c);
  u8x8.drawString(0,4,"temp :");
  dtostrf(myData.c,10,8,temp);
  u8x8.drawString(6,4,temp);



  //Serial.print("Bool: ");
  //Serial.println(myData.d);
  Serial.println();
  u8x8.refreshDisplay();		// only required for SSD1606/7  
  delay(20);
}
 
void setup() {
  // Initialize Serial Monitor
  Serial.begin(115200);
  pinMode(ledPin, OUTPUT);

    u8x8.begin();
  u8x8.setPowerSave(0);
  
  // Set device as a Wi-Fi Station
  WiFi.mode(WIFI_STA);

  // Init ESP-NOW
  if (esp_now_init() != ESP_OK) {
    Serial.println("Error initializing ESP-NOW");
    return;
  }
  
  // Once ESPNow is successfully Init, we will register for recv CB to
  // get recv packer info
  esp_now_register_recv_cb(OnDataRecv);
}
 
void loop() {

}